# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_swig_array', [dirname(__file__)])
        except ImportError:
            import _swig_array
            return _swig_array
        if fp is not None:
            try:
                _mod = imp.load_module('_swig_array', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _swig_array = swig_import_helper()
    del swig_import_helper
else:
    import _swig_array
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def cdata(ptr, nelements=1):
    return _swig_array.cdata(ptr, nelements)
cdata = _swig_array.cdata

def memmove(data, indata):
    return _swig_array.memmove(data, indata)
memmove = _swig_array.memmove

_swig_array.fromStart_swigconstant(_swig_array)
fromStart = _swig_array.fromStart

_swig_array.toEnd_swigconstant(_swig_array)
toEnd = _swig_array.toEnd
class Range(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Range, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Range, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _swig_array.new_Range(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def first(self, lowRange=0):
        return _swig_array.Range_first(self, lowRange)

    def last(self, highRange=0):
        return _swig_array.Range_last(self, highRange)

    def length(self, arg2=0):
        return _swig_array.Range_length(self, arg2)

    def stride(self):
        return _swig_array.Range_stride(self)

    def isAscendingContiguous(self):
        return _swig_array.Range_isAscendingContiguous(self)

    def setRange(self, first, last, stride=1):
        return _swig_array.Range_setRange(self, first, last, stride)
    __swig_getmethods__["all"] = lambda x: _swig_array.Range_all
    if _newclass:
        all = staticmethod(_swig_array.Range_all)

    def isUnitStride(self):
        return _swig_array.Range_isUnitStride(self)
    __swig_destroy__ = _swig_array.delete_Range
    __del__ = lambda self: None
Range_swigregister = _swig_array.Range_swigregister
Range_swigregister(Range)

def Range_all():
    return _swig_array.Range_all()
Range_all = _swig_array.Range_all

class BlitzArray_double_1(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BlitzArray_double_1, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BlitzArray_double_1, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _swig_array.new_BlitzArray_double_1(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def data(self):
        return _swig_array.BlitzArray_double_1_data(self)

    def size(self):
        return _swig_array.BlitzArray_double_1_size(self)

    def read(self, *args):
        return _swig_array.BlitzArray_double_1_read(self, *args)

    def write(self, *args):
        return _swig_array.BlitzArray_double_1_write(self, *args)

    def datav(self):
        return _swig_array.BlitzArray_double_1_datav(self)

    def shape0(self):
        return _swig_array.BlitzArray_double_1_shape0(self)

    def shape1(self):
        return _swig_array.BlitzArray_double_1_shape1(self)

    def shape2(self):
        return _swig_array.BlitzArray_double_1_shape2(self)

    def shape3(self):
        return _swig_array.BlitzArray_double_1_shape3(self)
    __swig_destroy__ = _swig_array.delete_BlitzArray_double_1
    __del__ = lambda self: None
BlitzArray_double_1_swigregister = _swig_array.BlitzArray_double_1_swigregister
BlitzArray_double_1_swigregister(BlitzArray_double_1)

class BlitzArray_double_2(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BlitzArray_double_2, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BlitzArray_double_2, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _swig_array.new_BlitzArray_double_2(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def data(self):
        return _swig_array.BlitzArray_double_2_data(self)

    def size(self):
        return _swig_array.BlitzArray_double_2_size(self)

    def read(self, *args):
        return _swig_array.BlitzArray_double_2_read(self, *args)

    def write(self, *args):
        return _swig_array.BlitzArray_double_2_write(self, *args)

    def datav(self):
        return _swig_array.BlitzArray_double_2_datav(self)

    def shape0(self):
        return _swig_array.BlitzArray_double_2_shape0(self)

    def shape1(self):
        return _swig_array.BlitzArray_double_2_shape1(self)

    def shape2(self):
        return _swig_array.BlitzArray_double_2_shape2(self)

    def shape3(self):
        return _swig_array.BlitzArray_double_2_shape3(self)
    __swig_destroy__ = _swig_array.delete_BlitzArray_double_2
    __del__ = lambda self: None
BlitzArray_double_2_swigregister = _swig_array.BlitzArray_double_2_swigregister
BlitzArray_double_2_swigregister(BlitzArray_double_2)

class BlitzArray_double_3(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BlitzArray_double_3, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BlitzArray_double_3, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _swig_array.new_BlitzArray_double_3(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def data(self):
        return _swig_array.BlitzArray_double_3_data(self)

    def size(self):
        return _swig_array.BlitzArray_double_3_size(self)

    def read(self, *args):
        return _swig_array.BlitzArray_double_3_read(self, *args)

    def write(self, *args):
        return _swig_array.BlitzArray_double_3_write(self, *args)

    def datav(self):
        return _swig_array.BlitzArray_double_3_datav(self)

    def shape0(self):
        return _swig_array.BlitzArray_double_3_shape0(self)

    def shape1(self):
        return _swig_array.BlitzArray_double_3_shape1(self)

    def shape2(self):
        return _swig_array.BlitzArray_double_3_shape2(self)

    def shape3(self):
        return _swig_array.BlitzArray_double_3_shape3(self)
    __swig_destroy__ = _swig_array.delete_BlitzArray_double_3
    __del__ = lambda self: None
BlitzArray_double_3_swigregister = _swig_array.BlitzArray_double_3_swigregister
BlitzArray_double_3_swigregister(BlitzArray_double_3)

class BlitzArray_double_4(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BlitzArray_double_4, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BlitzArray_double_4, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _swig_array.new_BlitzArray_double_4(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def data(self):
        return _swig_array.BlitzArray_double_4_data(self)

    def size(self):
        return _swig_array.BlitzArray_double_4_size(self)

    def read(self, *args):
        return _swig_array.BlitzArray_double_4_read(self, *args)

    def write(self, *args):
        return _swig_array.BlitzArray_double_4_write(self, *args)

    def datav(self):
        return _swig_array.BlitzArray_double_4_datav(self)

    def shape0(self):
        return _swig_array.BlitzArray_double_4_shape0(self)

    def shape1(self):
        return _swig_array.BlitzArray_double_4_shape1(self)

    def shape2(self):
        return _swig_array.BlitzArray_double_4_shape2(self)

    def shape3(self):
        return _swig_array.BlitzArray_double_4_shape3(self)
    __swig_destroy__ = _swig_array.delete_BlitzArray_double_4
    __del__ = lambda self: None
BlitzArray_double_4_swigregister = _swig_array.BlitzArray_double_4_swigregister
BlitzArray_double_4_swigregister(BlitzArray_double_4)

class BlitzArray_bool_1(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BlitzArray_bool_1, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BlitzArray_bool_1, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _swig_array.new_BlitzArray_bool_1(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def data(self):
        return _swig_array.BlitzArray_bool_1_data(self)

    def size(self):
        return _swig_array.BlitzArray_bool_1_size(self)

    def read(self, *args):
        return _swig_array.BlitzArray_bool_1_read(self, *args)

    def write(self, *args):
        return _swig_array.BlitzArray_bool_1_write(self, *args)

    def datav(self):
        return _swig_array.BlitzArray_bool_1_datav(self)

    def shape0(self):
        return _swig_array.BlitzArray_bool_1_shape0(self)

    def shape1(self):
        return _swig_array.BlitzArray_bool_1_shape1(self)

    def shape2(self):
        return _swig_array.BlitzArray_bool_1_shape2(self)

    def shape3(self):
        return _swig_array.BlitzArray_bool_1_shape3(self)
    __swig_destroy__ = _swig_array.delete_BlitzArray_bool_1
    __del__ = lambda self: None
BlitzArray_bool_1_swigregister = _swig_array.BlitzArray_bool_1_swigregister
BlitzArray_bool_1_swigregister(BlitzArray_bool_1)

class BlitzArray_bool_2(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BlitzArray_bool_2, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BlitzArray_bool_2, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _swig_array.new_BlitzArray_bool_2(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def data(self):
        return _swig_array.BlitzArray_bool_2_data(self)

    def size(self):
        return _swig_array.BlitzArray_bool_2_size(self)

    def read(self, *args):
        return _swig_array.BlitzArray_bool_2_read(self, *args)

    def write(self, *args):
        return _swig_array.BlitzArray_bool_2_write(self, *args)

    def datav(self):
        return _swig_array.BlitzArray_bool_2_datav(self)

    def shape0(self):
        return _swig_array.BlitzArray_bool_2_shape0(self)

    def shape1(self):
        return _swig_array.BlitzArray_bool_2_shape1(self)

    def shape2(self):
        return _swig_array.BlitzArray_bool_2_shape2(self)

    def shape3(self):
        return _swig_array.BlitzArray_bool_2_shape3(self)
    __swig_destroy__ = _swig_array.delete_BlitzArray_bool_2
    __del__ = lambda self: None
BlitzArray_bool_2_swigregister = _swig_array.BlitzArray_bool_2_swigregister
BlitzArray_bool_2_swigregister(BlitzArray_bool_2)

class BlitzArray_bool_3(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BlitzArray_bool_3, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BlitzArray_bool_3, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _swig_array.new_BlitzArray_bool_3(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def data(self):
        return _swig_array.BlitzArray_bool_3_data(self)

    def size(self):
        return _swig_array.BlitzArray_bool_3_size(self)

    def read(self, *args):
        return _swig_array.BlitzArray_bool_3_read(self, *args)

    def write(self, *args):
        return _swig_array.BlitzArray_bool_3_write(self, *args)

    def datav(self):
        return _swig_array.BlitzArray_bool_3_datav(self)

    def shape0(self):
        return _swig_array.BlitzArray_bool_3_shape0(self)

    def shape1(self):
        return _swig_array.BlitzArray_bool_3_shape1(self)

    def shape2(self):
        return _swig_array.BlitzArray_bool_3_shape2(self)

    def shape3(self):
        return _swig_array.BlitzArray_bool_3_shape3(self)
    __swig_destroy__ = _swig_array.delete_BlitzArray_bool_3
    __del__ = lambda self: None
BlitzArray_bool_3_swigregister = _swig_array.BlitzArray_bool_3_swigregister
BlitzArray_bool_3_swigregister(BlitzArray_bool_3)

class BlitzArray_bool_4(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BlitzArray_bool_4, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BlitzArray_bool_4, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _swig_array.new_BlitzArray_bool_4(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def data(self):
        return _swig_array.BlitzArray_bool_4_data(self)

    def size(self):
        return _swig_array.BlitzArray_bool_4_size(self)

    def read(self, *args):
        return _swig_array.BlitzArray_bool_4_read(self, *args)

    def write(self, *args):
        return _swig_array.BlitzArray_bool_4_write(self, *args)

    def datav(self):
        return _swig_array.BlitzArray_bool_4_datav(self)

    def shape0(self):
        return _swig_array.BlitzArray_bool_4_shape0(self)

    def shape1(self):
        return _swig_array.BlitzArray_bool_4_shape1(self)

    def shape2(self):
        return _swig_array.BlitzArray_bool_4_shape2(self)

    def shape3(self):
        return _swig_array.BlitzArray_bool_4_shape3(self)
    __swig_destroy__ = _swig_array.delete_BlitzArray_bool_4
    __del__ = lambda self: None
BlitzArray_bool_4_swigregister = _swig_array.BlitzArray_bool_4_swigregister
BlitzArray_bool_4_swigregister(BlitzArray_bool_4)

class BlitzArray_int_1(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BlitzArray_int_1, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BlitzArray_int_1, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _swig_array.new_BlitzArray_int_1(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def data(self):
        return _swig_array.BlitzArray_int_1_data(self)

    def size(self):
        return _swig_array.BlitzArray_int_1_size(self)

    def read(self, *args):
        return _swig_array.BlitzArray_int_1_read(self, *args)

    def write(self, *args):
        return _swig_array.BlitzArray_int_1_write(self, *args)

    def datav(self):
        return _swig_array.BlitzArray_int_1_datav(self)

    def shape0(self):
        return _swig_array.BlitzArray_int_1_shape0(self)

    def shape1(self):
        return _swig_array.BlitzArray_int_1_shape1(self)

    def shape2(self):
        return _swig_array.BlitzArray_int_1_shape2(self)

    def shape3(self):
        return _swig_array.BlitzArray_int_1_shape3(self)
    __swig_destroy__ = _swig_array.delete_BlitzArray_int_1
    __del__ = lambda self: None
BlitzArray_int_1_swigregister = _swig_array.BlitzArray_int_1_swigregister
BlitzArray_int_1_swigregister(BlitzArray_int_1)

class BlitzArray_int_2(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BlitzArray_int_2, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BlitzArray_int_2, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _swig_array.new_BlitzArray_int_2(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def data(self):
        return _swig_array.BlitzArray_int_2_data(self)

    def size(self):
        return _swig_array.BlitzArray_int_2_size(self)

    def read(self, *args):
        return _swig_array.BlitzArray_int_2_read(self, *args)

    def write(self, *args):
        return _swig_array.BlitzArray_int_2_write(self, *args)

    def datav(self):
        return _swig_array.BlitzArray_int_2_datav(self)

    def shape0(self):
        return _swig_array.BlitzArray_int_2_shape0(self)

    def shape1(self):
        return _swig_array.BlitzArray_int_2_shape1(self)

    def shape2(self):
        return _swig_array.BlitzArray_int_2_shape2(self)

    def shape3(self):
        return _swig_array.BlitzArray_int_2_shape3(self)
    __swig_destroy__ = _swig_array.delete_BlitzArray_int_2
    __del__ = lambda self: None
BlitzArray_int_2_swigregister = _swig_array.BlitzArray_int_2_swigregister
BlitzArray_int_2_swigregister(BlitzArray_int_2)

class BlitzArray_int_3(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BlitzArray_int_3, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BlitzArray_int_3, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _swig_array.new_BlitzArray_int_3(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def data(self):
        return _swig_array.BlitzArray_int_3_data(self)

    def size(self):
        return _swig_array.BlitzArray_int_3_size(self)

    def read(self, *args):
        return _swig_array.BlitzArray_int_3_read(self, *args)

    def write(self, *args):
        return _swig_array.BlitzArray_int_3_write(self, *args)

    def datav(self):
        return _swig_array.BlitzArray_int_3_datav(self)

    def shape0(self):
        return _swig_array.BlitzArray_int_3_shape0(self)

    def shape1(self):
        return _swig_array.BlitzArray_int_3_shape1(self)

    def shape2(self):
        return _swig_array.BlitzArray_int_3_shape2(self)

    def shape3(self):
        return _swig_array.BlitzArray_int_3_shape3(self)
    __swig_destroy__ = _swig_array.delete_BlitzArray_int_3
    __del__ = lambda self: None
BlitzArray_int_3_swigregister = _swig_array.BlitzArray_int_3_swigregister
BlitzArray_int_3_swigregister(BlitzArray_int_3)

class BlitzArray_int_4(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BlitzArray_int_4, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BlitzArray_int_4, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _swig_array.new_BlitzArray_int_4(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def data(self):
        return _swig_array.BlitzArray_int_4_data(self)

    def size(self):
        return _swig_array.BlitzArray_int_4_size(self)

    def read(self, *args):
        return _swig_array.BlitzArray_int_4_read(self, *args)

    def write(self, *args):
        return _swig_array.BlitzArray_int_4_write(self, *args)

    def datav(self):
        return _swig_array.BlitzArray_int_4_datav(self)

    def shape0(self):
        return _swig_array.BlitzArray_int_4_shape0(self)

    def shape1(self):
        return _swig_array.BlitzArray_int_4_shape1(self)

    def shape2(self):
        return _swig_array.BlitzArray_int_4_shape2(self)

    def shape3(self):
        return _swig_array.BlitzArray_int_4_shape3(self)
    __swig_destroy__ = _swig_array.delete_BlitzArray_int_4
    __del__ = lambda self: None
BlitzArray_int_4_swigregister = _swig_array.BlitzArray_int_4_swigregister
BlitzArray_int_4_swigregister(BlitzArray_int_4)

# This file is compatible with both classic and new-style classes.


